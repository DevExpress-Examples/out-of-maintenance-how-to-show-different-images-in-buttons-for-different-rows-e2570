<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v13.1" name="DevExpress.Utils.v13.1, Version=13.1.14.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v13.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMC4xLCBWZXJzaW9uPTEwLjEu
        Ni4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTNmMDg3Y2YzYTRlMDcwM2IMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAABwJAAACFAEAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAAqUlEQVQ4T2NgGAX0C4HAE3r/gbYx
        k21j4And/xEXCBjiuVXjPwh7QGkYG8SPuaH73/+A7n/fPVq4XRJ0Vft/8BXt/4Hntf8HnALik9r//U8A
        8THt/36HgHi/9n+fndr/nZargAxhwfCO5zrN/17rNf97bwRhrf9eGyB8EPZYDcHW0xRAmjVxhYUoUAIr
        NqiX+G85UR6vZrwBDDIAn83ExA75UUiM6QOnBgDW8lDyADvu3AAAAABJRU5ErkJggu0AAACJUE5HDQoa
        CgAAAA1JSERSAAAAEAAAABAIBgAAAB/z/2EAAAABc1JHQgCuzhzpAAAABGdBTUEAALGPC/xhBQAAAAlw
        SFlzAAAOwwAADsMBx2+oZAAAAIJJREFUOE9jYBgFNA0BZrJND32p8R+oWZQsA4Kuav0PeU6mAf5nNP/7
        7tX577cfiA8C8SHt//6Hofio9v+Ak9r/A09p/3dcogxyIQZgcVyh9N9znRZBbNoljdUAkInMVlPk/3us
        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
        ggs=
</value>
  </data>
</root>